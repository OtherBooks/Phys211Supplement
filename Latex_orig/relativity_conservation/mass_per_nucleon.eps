%!PS-Adobe-2.0 EPSF-2.0
%%Title: mass_per_nucleon.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Tue Mar 22 10:15:48 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1260 600 M
5600 0 V
1.000 UL
LTb
1260 600 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 600 M
[ [(Helvetica) 200.0 0.0 true true ( 0.998)]
] -66.7 MRshow
1.000 UL
LTa
1260 1440 M
5600 0 V
1.000 UL
LTb
1260 1440 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 1440 M
[ [(Helvetica) 200.0 0.0 true true ( 1)]
] -66.7 MRshow
1.000 UL
LTa
1260 2280 M
5600 0 V
1.000 UL
LTb
1260 2280 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 2280 M
[ [(Helvetica) 200.0 0.0 true true ( 1.002)]
] -66.7 MRshow
1.000 UL
LTa
1260 3120 M
5600 0 V
1.000 UL
LTb
1260 3120 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 3120 M
[ [(Helvetica) 200.0 0.0 true true ( 1.004)]
] -66.7 MRshow
1.000 UL
LTa
1260 3960 M
5600 0 V
1.000 UL
LTb
1260 3960 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 3960 M
[ [(Helvetica) 200.0 0.0 true true ( 1.006)]
] -66.7 MRshow
1.000 UL
LTa
1260 4800 M
5600 0 V
1.000 UL
LTb
1260 4800 M
63 0 V
5537 0 R
-63 0 V
 stroke
1140 4800 M
[ [(Helvetica) 200.0 0.0 true true ( 1.008)]
] -66.7 MRshow
1.000 UL
LTa
1260 600 M
0 4200 V
1.000 UL
LTb
1260 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
1260 400 M
[ [(Helvetica) 200.0 0.0 true true ( 0)]
] -66.7 MCshow
1.000 UL
LTa
1708 600 M
0 4200 V
1.000 UL
LTb
1708 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
1708 400 M
[ [(Helvetica) 200.0 0.0 true true ( 20)]
] -66.7 MCshow
1.000 UL
LTa
2156 600 M
0 4200 V
1.000 UL
LTb
2156 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
2156 400 M
[ [(Helvetica) 200.0 0.0 true true ( 40)]
] -66.7 MCshow
1.000 UL
LTa
2604 600 M
0 4200 V
1.000 UL
LTb
2604 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
2604 400 M
[ [(Helvetica) 200.0 0.0 true true ( 60)]
] -66.7 MCshow
1.000 UL
LTa
3052 600 M
0 4200 V
1.000 UL
LTb
3052 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
3052 400 M
[ [(Helvetica) 200.0 0.0 true true ( 80)]
] -66.7 MCshow
1.000 UL
LTa
3500 600 M
0 4200 V
1.000 UL
LTb
3500 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
3500 400 M
[ [(Helvetica) 200.0 0.0 true true ( 100)]
] -66.7 MCshow
1.000 UL
LTa
3948 600 M
0 4200 V
1.000 UL
LTb
3948 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
3948 400 M
[ [(Helvetica) 200.0 0.0 true true ( 120)]
] -66.7 MCshow
1.000 UL
LTa
4396 600 M
0 4200 V
1.000 UL
LTb
4396 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
4396 400 M
[ [(Helvetica) 200.0 0.0 true true ( 140)]
] -66.7 MCshow
1.000 UL
LTa
4844 600 M
0 4200 V
1.000 UL
LTb
4844 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
4844 400 M
[ [(Helvetica) 200.0 0.0 true true ( 160)]
] -66.7 MCshow
1.000 UL
LTa
5292 600 M
0 4200 V
1.000 UL
LTb
5292 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
5292 400 M
[ [(Helvetica) 200.0 0.0 true true ( 180)]
] -66.7 MCshow
1.000 UL
LTa
5740 600 M
0 4200 V
1.000 UL
LTb
5740 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
5740 400 M
[ [(Helvetica) 200.0 0.0 true true ( 200)]
] -66.7 MCshow
1.000 UL
LTa
6188 600 M
0 4200 V
1.000 UL
LTb
6188 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
6188 400 M
[ [(Helvetica) 200.0 0.0 true true ( 220)]
] -66.7 MCshow
1.000 UL
LTa
6636 600 M
0 4200 V
1.000 UL
LTb
6636 600 M
0 63 V
0 4137 R
0 -63 V
 stroke
6636 400 M
[ [(Helvetica) 200.0 0.0 true true ( 240)]
] -66.7 MCshow
1.000 UL
LTb
1260 600 M
5600 0 V
0 4200 V
-5600 0 V
0 -4200 V
 stroke
200 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true (M/A \(Relative Atomic Mass Units\))]
] -66.7 MCshow
grestore
4060 100 M
[ [(Helvetica) 200.0 0.0 true true (A)]
] -66.7 MCshow
1663 4380 M
[ [(Helvetica) 160.0 100.0 true true (2)]
[(Helvetica) 200.0 0.0 true true (H - Deuterium)]
] -86.7 MLshow
2514 1356 M
[ [(Helvetica) 160.0 100.0 true true (56)]
[(Helvetica) 200.0 0.0 true true (Fe - Iron)]
] -86.7 MCshow
5740 1986 M
[ [(Helvetica) 160.0 100.0 true true (238)]
[(Helvetica) 200.0 0.0 true true (U - Uranium)]
] -86.7 MCshow
1.000 UL
LT0
1614 4380 M
-242 42 V
73 6 R
-73 -6 V
66 -31 V
1.000 UL
LT0
2514 1272 M
0 -252 V
-20 73 R
20 -73 V
19 73 V
1.000 UL
LT0
6300 1860 M
291 -252 V
-104 50 R
104 -50 V
-65 95 V
1.000 UL
LT0
1305 4401 M
43 -1432 V
45 -555 V
41 -283 V
39 -196 V
36 -157 V
37 -127 V
37 -103 V
38 -83 V
39 -68 V
39 -57 V
39 -49 V
40 -42 V
40 -37 V
40 -33 V
41 -28 V
42 -24 V
42 -21 V
44 -18 V
43 -16 V
45 -14 V
44 -13 V
45 -12 V
46 -10 V
45 -10 V
45 -9 V
44 -7 V
45 -6 V
45 -5 V
45 -3 V
46 -2 V
46 -1 V
47 0 V
49 1 V
49 2 V
50 2 V
50 2 V
50 3 V
50 2 V
50 3 V
49 3 V
49 3 V
47 3 V
47 4 V
47 3 V
47 5 V
47 5 V
47 5 V
49 6 V
49 6 V
51 7 V
52 7 V
53 8 V
55 7 V
55 8 V
57 8 V
56 7 V
56 8 V
56 8 V
56 7 V
54 8 V
53 7 V
51 7 V
51 7 V
49 8 V
49 7 V
48 8 V
49 8 V
49 8 V
49 8 V
51 9 V
52 9 V
52 10 V
54 9 V
53 9 V
54 9 V
54 9 V
54 9 V
54 8 V
53 9 V
54 8 V
54 9 V
54 8 V
55 9 V
55 8 V
54 8 V
55 8 V
55 8 V
55 8 V
55 7 V
58 7 V
60 8 V
67 9 V
75 11 V
90 15 V
108 20 V
130 25 V
144 29 V
134 26 V
115 20 V
1.000 UP
1.000 UL
LT5
1305 4401 Circle
1350 1713 Circle
1417 2400 Circle
1462 2008 Circle
1506 1795 Circle
1529 1440 Circle
1574 1532 Circle
1618 1307 Circle
1686 1405 Circle
1708 1281 Circle
1775 1253 Circle
1798 1178 Circle
1865 1153 Circle
1887 1094 Circle
1954 1085 Circle
1977 1073 Circle
2044 1066 Circle
2156 1045 Circle
2134 1049 Circle
2156 1047 Circle
2268 1028 Circle
2335 985 Circle
2402 979 Circle
2425 960 Circle
2492 967 Circle
2514 952 Circle
2582 964 Circle
2559 972 Circle
2671 971 Circle
2694 975 Circle
2806 987 Circle
2828 986 Circle
2940 1001 Circle
3052 1002 Circle
3030 1006 Circle
3142 998 Circle
3164 1004 Circle
3231 990 Circle
3254 996 Circle
3276 995 Circle
3343 1017 Circle
3410 1023 Circle
3433 1035 Circle
3545 1046 Circle
3567 1055 Circle
3634 1058 Circle
3657 1067 Circle
3814 1084 Circle
3836 1089 Circle
3948 1098 Circle
3970 1106 Circle
4172 1137 Circle
4105 1124 Circle
4217 1135 Circle
4239 1141 Circle
4351 1152 Circle
4374 1157 Circle
4396 1156 Circle
4418 1165 Circle
4441 1167 Circle
4508 1187 Circle
4665 1218 Circle
4687 1224 Circle
4799 1238 Circle
4822 1243 Circle
4934 1259 Circle
4956 1263 Circle
4978 1264 Circle
5046 1277 Circle
5158 1292 Circle
5180 1298 Circle
5292 1315 Circle
5314 1319 Circle
5382 1328 Circle
5449 1341 Circle
5561 1356 Circle
5583 1359 Circle
5628 1364 Circle
5673 1369 Circle
5785 1379 Circle
5852 1388 Circle
5919 1393 Circle
5942 1401 Circle
6457 1509 Circle
6434 1505 Circle
6591 1530 Circle
stroke
grestore
end
showpage
